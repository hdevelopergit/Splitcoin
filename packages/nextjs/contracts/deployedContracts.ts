/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

const deployedContracts = {
  31337: {
    Project: {
      address: "0xB7f8BC63BbcaD18155201308C8f3540b07f84F5e",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "initialOwner",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_i",
              type: "uint256",
            },
          ],
          name: "calculateTransfers",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bool",
              name: "_selectedProject",
              type: "bool",
            },
            {
              internalType: "uint256",
              name: "_i",
              type: "uint256",
            },
          ],
          name: "getAddress",
          outputs: [
            {
              internalType: "address[]",
              name: "",
              type: "address[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bool",
              name: "_selectedProject",
              type: "bool",
            },
            {
              internalType: "uint256",
              name: "_i",
              type: "uint256",
            },
          ],
          name: "getExpenses",
          outputs: [
            {
              components: [
                {
                  internalType: "string",
                  name: "expenseDesc",
                  type: "string",
                },
                {
                  internalType: "address",
                  name: "expender",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "value",
                  type: "uint256",
                },
              ],
              internalType: "struct SplitCoin.Expense[]",
              name: "",
              type: "tuple[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_sender",
              type: "address",
            },
          ],
          name: "getProjects",
          outputs: [
            {
              internalType: "string[]",
              name: "",
              type: "string[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_index",
              type: "uint256",
            },
          ],
          name: "getSmartContract",
          outputs: [
            {
              internalType: "contract SplitCoin",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bool",
              name: "_selectedProject",
              type: "bool",
            },
            {
              internalType: "uint256",
              name: "_i",
              type: "uint256",
            },
          ],
          name: "getTransfers",
          outputs: [
            {
              components: [
                {
                  internalType: "address",
                  name: "from",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "to",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "value",
                  type: "uint256",
                },
              ],
              internalType: "struct SplitCoin.TransferMov[]",
              name: "",
              type: "tuple[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_projectDesc",
              type: "string",
            },
          ],
          name: "newProject",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "projectArr",
          outputs: [
            {
              internalType: "string",
              name: "projectDesc",
              type: "string",
            },
            {
              internalType: "contract SplitCoin",
              name: "splitCoin",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_participant",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_i",
              type: "uint256",
            },
          ],
          name: "saveAddress",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_desc",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "_value",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_i",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "_expender",
              type: "address",
            },
          ],
          name: "saveExpenses",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_from",
              type: "address",
            },
            {
              internalType: "address payable",
              name: "_to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_i",
              type: "uint256",
            },
          ],
          name: "sendMoney",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
  },
  11155111: {
    Project: {
      address: "0xcafBD0e3487C42B12417009165494c922393b42B",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "initialOwner",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_i",
              type: "uint256",
            },
          ],
          name: "calculateTransfers",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bool",
              name: "_selectedProject",
              type: "bool",
            },
            {
              internalType: "uint256",
              name: "_i",
              type: "uint256",
            },
          ],
          name: "getAddress",
          outputs: [
            {
              internalType: "address[]",
              name: "",
              type: "address[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bool",
              name: "_selectedProject",
              type: "bool",
            },
            {
              internalType: "uint256",
              name: "_i",
              type: "uint256",
            },
          ],
          name: "getExpenses",
          outputs: [
            {
              components: [
                {
                  internalType: "string",
                  name: "expenseDesc",
                  type: "string",
                },
                {
                  internalType: "address",
                  name: "expender",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "value",
                  type: "uint256",
                },
              ],
              internalType: "struct SplitCoin.Expense[]",
              name: "",
              type: "tuple[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_sender",
              type: "address",
            },
          ],
          name: "getProjects",
          outputs: [
            {
              internalType: "string[]",
              name: "",
              type: "string[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_index",
              type: "uint256",
            },
          ],
          name: "getSmartContract",
          outputs: [
            {
              internalType: "contract SplitCoin",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bool",
              name: "_selectedProject",
              type: "bool",
            },
            {
              internalType: "uint256",
              name: "_i",
              type: "uint256",
            },
          ],
          name: "getTransfers",
          outputs: [
            {
              components: [
                {
                  internalType: "address",
                  name: "from",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "to",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "value",
                  type: "uint256",
                },
              ],
              internalType: "struct SplitCoin.TransferMov[]",
              name: "",
              type: "tuple[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_projectDesc",
              type: "string",
            },
          ],
          name: "newProject",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "projectArr",
          outputs: [
            {
              internalType: "string",
              name: "projectDesc",
              type: "string",
            },
            {
              internalType: "contract SplitCoin",
              name: "splitCoin",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_participant",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_i",
              type: "uint256",
            },
          ],
          name: "saveAddress",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_desc",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "_value",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_i",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "_expender",
              type: "address",
            },
          ],
          name: "saveExpenses",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_from",
              type: "address",
            },
            {
              internalType: "address payable",
              name: "_to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_i",
              type: "uint256",
            },
          ],
          name: "sendMoney",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
